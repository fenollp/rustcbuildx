on: [push]
name: buildx
jobs:


  bin:
    runs-on: ubuntu-latest
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/checkout@v3

    - uses: actions-rs/cargo@v1
      with:
        command: fetch

    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all-targets --all-features --locked --frozen --offline

    - name: Temporarily save bin
      uses: actions/upload-artifact@v2
      with:
        name: bin-artifact
        path: target/debug/rustcbuildx
        retention-days: 1


  single-rustc-call:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - name: Retrieve saved bin
      uses: actions/download-artifact@v2
      with:
        name: bin-artifact
        path: bin
    - run: |
        echo $PWD
        ls -lha .
        ls -lha bin || true
        ls -lha rustcbuildx || true
        # ls -lha /home/runner/work/rustcbuildx/rustcbuildx/target/debug/rustcbuildx
        # /home/runner/work/rustcbuildx/rustcbuildx/target/debug/rustcbuildx

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/checkout@v3

    # - uses: actions-rs/cargo@v1
    #   with:
    #     command: fetch
    - run: |
        tmp=$(mktemp -d)
        curl -#fsSLo "$tmp"/v1.0.3.zip https://github.com/sunfishcode/io-lifetimes/archive/refs/tags/v1.0.3.zip
        cd "$tmp" && unzip v1.0.3.zip && cd -
        mkdir -p $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/
        mv "$tmp"/io-lifetimes-1.0.3 $HOME/.cargo/registry/src/github.com-1ecc6299db9ec823/

    - uses: docker/setup-buildx-action@v2

    - run: |
        export RUSTCBUILDX_DEBUG=1
        export PROFILE=${PROFILE:-debug}
        export CARGO_HOME=${CARGO_HOME:-$HOME/.cargo}
        export CARGO_TARGET_DIR=${CARGO_TARGET_DIR:-$PWD/_targetWell}
        ./bin/rustcbuildx rustc --crate-name build_script_build --edition=2018 "$CARGO_HOME"/registry/src/github.com-1ecc6299db9ec823/io-lifetimes-1.0.3/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=211 --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="close"' --cfg 'feature="default"' --cfg 'feature="libc"' --cfg 'feature="windows-sys"' -C metadata=5fc4d6e9dda15f11 -C extra-filename=-5fc4d6e9dda15f11 --out-dir "$CARGO_TARGET_DIR/$PROFILE"/build/io-lifetimes-5fc4d6e9dda15f11 -C linker=/usr/bin/clang -L dependency="$CARGO_TARGET_DIR/$PROFILE"/deps --cap-lints allow -C link-arg=-fuse-ld=/usr/local/bin/mold


  tryin-sequential:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - name: Retrieve saved bin
      uses: actions/download-artifact@v2
      with:
        name: bin-artifact
        path: target/debug/rustcbuildx

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/checkout@v3

    - uses: actions-rs/cargo@v1
      with:
        command: fetch

    - uses: docker/setup-buildx-action@v2

    - run: |
        ls -lha /home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/io-lifetimes-1.0.3 || true
        ls -lha /home/runner/.cargo/registry/src/*/io-lifetimes-1.0.3 || true
        ls -lha /home/runner/.cargo/registry/src/*/io-lifetimes-* || true
    - run: |
        export RUSTCBUILDX_DEBUG=1
        CARGO_TARGET_DIR=_target \
          ./target/debug/rustcbuildx


  wrapped-build:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - name: Retrieve saved bin
      uses: actions/download-artifact@v2
      with:
        name: bin-artifact
        path: target/debug/rustcbuildx

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/checkout@v3

    - uses: actions-rs/cargo@v1
      with:
        command: fetch

    - uses: docker/setup-buildx-action@v2

    - run: |
        export RUSTCBUILDX_DEBUG=1
        export RUSTC_WRAPPER=$PWD/target/debug/rustcbuildx
        cargo -vv build --locked --frozen --offline --all-targets --all-features


  wrapped-build-with-target:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - name: Retrieve saved bin
      uses: actions/download-artifact@v2
      with:
        name: bin-artifact
        path: target/debug/rustcbuildx

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/checkout@v3

    - uses: actions-rs/cargo@v1
      with:
        command: fetch

    - uses: docker/setup-buildx-action@v2

    - run: |
        export RUSTCBUILDX_DEBUG=1
        export RUSTC_WRAPPER=$PWD/target/debug/rustcbuildx
        CARGO_TARGET_DIR=target \
          cargo -vv build --locked --frozen --offline --all-targets --all-features
