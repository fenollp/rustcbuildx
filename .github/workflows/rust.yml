on: [push]
name: cargo
jobs:

  test:
    name: tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - uses: actions/checkout@v3
    - uses: taiki-e/install-action@nextest
    - name: Cache `cargo fetch`
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-deps-
    - uses: actions-rs/cargo@v1
      with:
        command: fetch
    - name: Cache `cargo test`
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}-and-${{ hashFiles('src/**') }}
        restore-keys: |
          ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}-and-
          ${{ runner.os }}-cargo-test-
    - uses: actions-rs/cargo@v1
      with:
        command: nextest
        args: run --all-targets --all-features --locked --frozen --offline
    - uses: actions-rs/cargo@v1
      with:
        command: nextest
        args: run --all-targets --all-features --locked --frozen --offline --release

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
    - run: rustup component add rustfmt
    - uses: actions/checkout@v3
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --check --all

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - run: rustup component add clippy
    - uses: actions/checkout@v3
    - name: Cache `cargo fetch`
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-deps-
    - uses: actions-rs/cargo@v1
      with:
        command: fetch
    - name: Cache `cargo clippy`
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}-and-${{ hashFiles('src/**') }}
        restore-keys: |
          ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}-and-
          ${{ runner.os }}-cargo-clippy-
    - uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: >
          --locked --frozen --offline --all-targets --all-features
          -- -D warnings --no-deps
          -W clippy::cast_lossless
          -W clippy::redundant_closure_for_method_calls
          -W clippy::str_to_string
